#include <iostream>
#include <cstring>
using namespace std;
class Worker
{
	protected:
		string name;
		int age;
		char sex;
		int choice;
		float pay_per_hour;
	public:
		Worker();
		Worker(string n, int a,char s,float p);
		~Worker()
    {
        delete []name;delete []sex;
    }
	    Name();
		virtual void Compute_day(double hours)=0;
		 friend ostream& operator << (ostream & out,Worker & worker);
};
Worker::Worker(string n,int a,char s,float p)
{
	name=n;
	age=a;
	sex=s;
	pay_per_hour=p;
}
Worker::Name(){

		cout<<name<<endl;
	
}
ostream& operator<<(ostream& out, Worker& worker){
	cout<<worker.name<<" "<<worker.age<<" "<<worker.sex<<" "<<worker.pay_per_hour<<endl;
}
class HourlyWorker:public Worker
	{
	public:
		HourlyWorker();
		HourlyWorker(string n,int a,char s,float p):Worker(n,a,s,p){}
		void Compute_pay(double hours)
		{
			switch(k){
			case 1:if(hours<40)
					   zhouxin=10*hours;
				   else 
					   zhouxin=10*40+1.5*10*(hours-40);
			case 2:if(hours<40)
					   zhouxin=20*hours;
				   else 
					   zhouxin=20*40+1.5*20*(hours-40);
			case 3:if(hours<40)
					   zhouxin=40*hours;
				   else 
					   zhouxin=40*40+1.5*40*(hours-40);
			}
		void display()
		{
			switch(k){
			case 1:cout<<"zhouxin:"<<zhouxin;
			case 2:cout<<"zhouxin:"<<zhouxin;
			case 3:cout<<"zhouixn:"<<zhouxin;
			}

		}
		friend ostream&operator<<(ostream& output,HourWorker& h);
			private:
				int k;
				int hours;
				float zhouxin;
		};
		ostream&operator<<(ostream& output,HourlyWorker& h)
		{
			output<<h.name<<","<<h.age<<","<<h.sex<<","<<pay_per_hour<<","<<zhouxin;
			return output;
		}
		class SalariedWorker:public Worker
		{
		public:
			SalariedWorker();
			SalariedWorker(string n,int a,char s,float p):Worker(n,a,s,p){}
			void Compute_pay(double hours)
			{
				switch(k){
				case 4:if(hours>=35)
						   zhouxin=30*40;
					else 
						zhouxin=30*hours+0.5*30*(35-hours);
				case 5:if(hours<35)
						   zhouxin=50*40;
					else 
						zhouxin=50*hours+0.5*50*(35-hours);
				}
			void display()
			{
				switch(k)
				{
				  case 4: cout<<"zhouxin:"<<zhouxin;
				  case 5: cout<<"zhouxin:"<<zhouxin;
				}
				friend ostream&operator<<(ostream& output,SalariedWorker& s);
				private:
					int k;
					int hours;
					float zhouxin;
			};
			ostream&operator<<(ostream& output,SalariedWorker & s)
			{
				output<,s.name<<","<<s.age<<","<<s.sex<<","<<s.pay_per_hour<<","<<zhouxin;
				return output;
			}
			int main()
			{ 
				int i,j;
				Worker a[5];//定义五个工人，前三个用于存储计时，后两个记薪 
				for(i=0;i<3;i++)
				{
					cin>>a[i].name>>",">>a[i].age>>",">>a[i].sex>>a[i].pay_per_hour;
					a[i]=new HourlyWorker(name[i],age,sex[i],pay_per_hour);
				} //输入计时工人的信息 
			 
				for(i=3;j<5;j++)
				{
					cin>>a[j].name>>",">>a[j].age>>",">>a[j].sex>>a[j].pay_per_hour;
					a[i]=new SalariedWorker(name[i],age,sex[i],pay_per_hour);
				}//输入计薪工人的信息 
				for(i=0;i<5;i++){
					cout<<a[i].name<<" "<<a[i].age<<" "<<a[i].sex<<" "<<a[i].pay_per_hour; 
				}
				cout<<"员工信息录入完毕"<<endl;
				for(i=0;i<5;i++)
				{
					cout<<"[1] select name1<<endl";
					cout<<"[2] select name2<<endl";
                    cout<<"[3] select name3<<endl";
					cout<<"[4] select name4<<endl";
					cout<<"[5] select name5<<endl";
					cout<<"Enter choice:<<endl";
					cin>>choice;
					if(choice==0) break;
					else
						switch(choice)
					{
				    
            case '0':return 0;
            case '1':cin>>a[0].name>>",">>a[j].age>>",">>a[j].sex>>a[j].pay_per_hour<<a[0]->Compute_pay(hours)<<endl;break;
            case '2':cin>>a[1].name>>",">>a[j].age>>",">>a[j].sex>>a[j].pay_per_hour<<a[1]->Compute_pay(hours)<<endl;break;
            case '3':	cin>>a[2].name>>",">>a[j].age>>",">>a[j].sex>>a[j].pay_per_hour<<" "<<a[2]->Compute_pay(hours)<<endl;break;
            case '4':	cin>>a[3].name>>",">>a[j].age>>",">>a[j].sex>>a[j].pay_per_hour<<" "<<a[3]->Compute_pay(hours)<<endl;break;
            case '5':	cin>>a[4].name>>",">>a[j].age>>",">>a[j].sex>>a[j].pay_per_hour<" "<<a[4]->Compute_pay(hours)<<endl;break;
            default:break;
        }
     }while(ch!='0');
					
					cout<<"周薪"<<compute_pay(hours);
					}
					return 0;
				}